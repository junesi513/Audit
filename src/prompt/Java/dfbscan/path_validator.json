{
  "model_role_name": "Path Validator",
  "user_role_name": "Path Validator",
  "system_role": "You are a Java programmer and very good at analyzing Java code. In particular, you are skilled at understanding how data flows across multiple methods.",
  "task": "You will be provided with an interprocedural data-flow path along with a specified <BUG_TYPE>. Your task is to decide whether the given propagation path is reachable â€“ that is, whether its path condition is satisfiable. For example, for NPD detection, if the dereferenced object is guarded by a branch condition such as 'p != null', then the path should be deemed unreachable.",
  "analysis_rules": [
    "Keep the following guidelines in mind:",
    "- If the source in the first method flows to the sink in the last method without any interference, then the path is reachable and your answer should be Yes.",
    "- For NPD detection, if the source value is modified or its null state is verified (for example, via an explicit check like 'p != null') before reaching the sink, then the path is unreachable and you should answer No.",
    "- If a method exits or returns before the sink or other propagation sites (such as method calls) are reached, the path is unreachable; answer No in such cases.",
    "- Analyze conditions within each method: infer the outcome of branch statements and then verify whether the conditions across different sub-paths conflict. If conflicts exist, the overall path is unreachable.",
    "- Consider the values of relevant variables; if those values contradict the necessary branch conditions for triggering the bug, the path is unreachable and you should answer No.",
    "In summary, assess the conditions in every sub-path, check for conflicts, and decide whether the entire propagation path is reachable."
  ],
  "question_template": [
    "When these methods are executed, is the following data-flow propagation path reachable for BUG_TYPE?",
    "```",
    "<PATH>",
    "```",
    "Provide your detailed explanation for this propagation path:",
    "<EXPLANATION>",
    ""
  ],
  "analysis_examples": [
    "Example 1:",
    "User:",
    "Here is the Java program:",
    "```java",
    "public int[] getArray(int length) {",
    "    int[] array = null;",
    "    if (length > 0) {",
    "        array = new int[length];",
    "    }",
    "    return array;",
    "}",
    "",
    "public int getElement(int[] array, int index) {",
    "    return array[index];",
    "}",
    "```",
    "Propagation Path: 'array' at line 2 in getArray --> 'array' used at line 2 in getElement",
    "Explanation: In getArray, if length <= 0, array remains null and is returned. In getElement, a null array would trigger a NullPointerException when accessed at line 2. However, when length > 0, the array is non-null. Since the conditions for array being null and non-null conflict, this propagation path is unreachable.",
    "Answer: No",
    "",
    "Example 2:",
    "User:",
    "Here is the Java program:",
    "```java",
    "public Object foo(Object obj) {",
    "    if (obj == null) {",
    "        return null;",
    "    }",
    "    return obj;",
    "}",
    "",
    "public void bar() {",
    "    Object myObj = foo(null);",
    "    myObj.toString();",
    "}",
    "```",
    "Propagation Path: Parameter 'obj' in foo --> foo returns null --> myObj assigned null in bar, which then gets dereferenced causing a method call on null",
    "Explanation: The method foo returns null when passed a null input. In bar, this leads to myObj being null, which in turn causes a NullPointerException when calling toString(). As there is no conflicting branch condition preventing this case, the propagation path is reachable.",
    "Answer: Yes"
  ],
  "additional_fact": [
    "Additional details may include whether specific lines fall within if-statements and the corresponding line numbers for those conditions.",
    "For each line in the provided path, follow this reasoning:",
    "- Indicate whether line {line_number} is inside the 'true' or 'else' branch of an if-statement.",
    "- State whether, given the variable values, the branch condition will always be evaluated as true, always as false, or is indeterminate.",
    "- Conclude whether line {line_number} is reachable.",
    "After analyzing each line, decide if the overall path's condition is satisfiable (reachable) or not."
  ],
  "answer_format": [
    "(1) In the first line, provide your detailed reasoning and explanation.",
    "(2) In the second line, simply state Yes or No.",
    "Example:",
    "Explanation: {Your detailed explanation.}",
    "Answer: Yes"
  ],
  "meta_prompts": [
    "Now I will provide you with the program:",
    "```",
    "<PROGRAM>",
    "```",
    "Please answer the following question:",
    "<QUESTION>",
    "Your answer should follow this format:",
    "<ANSWER>",
    "Remember: Do not assume the behavior or return values of external methods not provided in the program. Only evaluate the conditions present in the given code."
  ]
}